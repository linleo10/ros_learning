[0.000000] (-) TimerEvent: {}
[0.000131] (global_interface) JobQueued: {'identifier': 'global_interface', 'dependencies': OrderedDict()}
[0.000174] (params_learning) JobQueued: {'identifier': 'params_learning', 'dependencies': OrderedDict()}
[0.000560] (global_interface) JobStarted: {'identifier': 'global_interface'}
[0.013056] (params_learning) JobStarted: {'identifier': 'params_learning'}
[0.021298] (global_interface) JobProgress: {'identifier': 'global_interface', 'progress': 'cmake'}
[0.022329] (global_interface) JobProgress: {'identifier': 'global_interface', 'progress': 'build'}
[0.022975] (global_interface) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/ros_ws/build/global_interface', '--', '-j2', '-l2'], 'cwd': '/home/ros_ws/build/global_interface', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'root'), ('SSH_CLIENT', '112.41.8.17 3192 36019'), ('XDG_SESSION_TYPE', 'tty'), ('GIT_ASKPASS', '/root/.vscode-server/bin/b7886d7461186a5eac768481578c1d7ca80e2d21/extensions/git/dist/askpass.sh'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/galactic/opt/yaml_cpp_vendor/lib:/opt/ros/galactic/opt/rviz_ogre_vendor/lib:/opt/ros/galactic/lib/x86_64-linux-gnu:/opt/ros/galactic/lib'), ('BROWSER', '/root/.vscode-server/bin/b7886d7461186a5eac768481578c1d7ca80e2d21/bin/helpers/browser.sh'), ('MOTD_SHOWN', 'pam'), ('HOME', '/root'), ('TERM_PROGRAM_VERSION', '1.77.1'), ('VSCODE_IPC_HOOK_CLI', '/run/user/0/vscode-ipc-746c6602-655e-4dae-bc5d-ffe05e9d0a02.sock'), ('ROS_PYTHON_VERSION', '3'), ('VSCODE_GIT_ASKPASS_MAIN', '/root/.vscode-server/bin/b7886d7461186a5eac768481578c1d7ca80e2d21/extensions/git/dist/askpass-main.js'), ('VSCODE_GIT_ASKPASS_NODE', '/root/.vscode-server/bin/b7886d7461186a5eac768481578c1d7ca80e2d21/node'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/0/bus'), ('COLORTERM', 'truecolor'), ('COLCON_PREFIX_PATH', '/home/ros_ws/install'), ('ROS_DISTRO', 'galactic'), ('LOGNAME', 'root'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('TERM', 'xterm-256color'), ('XDG_SESSION_ID', '1987'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/root/.vscode-server/bin/b7886d7461186a5eac768481578c1d7ca80e2d21/bin/remote-cli:/opt/ros/galactic/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('XDG_RUNTIME_DIR', '/run/user/0'), ('LANG', 'en_US.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/0/vscode-git-146590f331.sock'), ('TERM_PROGRAM', 'vscode'), ('AMENT_PREFIX_PATH', '/home/ros_ws/install/params_learning:/home/ros_ws/install/global_interface:/opt/ros/galactic'), ('SHELL', '/bin/bash'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', ''), ('PWD', '/home/ros_ws/build/global_interface'), ('SSH_CONNECTION', '112.41.8.17 3192 45.150.164.214 36019'), ('XDG_DATA_DIRS', '/usr/local/share:/usr/share:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/galactic/lib/python3.8/site-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/ros_ws/install/params_learning:/home/ros_ws/install/global_interface:/opt/ros/galactic')]), 'shell': False}
[0.033402] (params_learning) JobProgress: {'identifier': 'params_learning', 'progress': 'cmake'}
[0.034341] (params_learning) JobProgress: {'identifier': 'params_learning', 'progress': 'build'}
[0.035682] (params_learning) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/ros_ws/build/params_learning', '--', '-j2', '-l2'], 'cwd': '/home/ros_ws/build/params_learning', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'root'), ('SSH_CLIENT', '112.41.8.17 3192 36019'), ('XDG_SESSION_TYPE', 'tty'), ('GIT_ASKPASS', '/root/.vscode-server/bin/b7886d7461186a5eac768481578c1d7ca80e2d21/extensions/git/dist/askpass.sh'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/galactic/opt/yaml_cpp_vendor/lib:/opt/ros/galactic/opt/rviz_ogre_vendor/lib:/opt/ros/galactic/lib/x86_64-linux-gnu:/opt/ros/galactic/lib'), ('BROWSER', '/root/.vscode-server/bin/b7886d7461186a5eac768481578c1d7ca80e2d21/bin/helpers/browser.sh'), ('MOTD_SHOWN', 'pam'), ('HOME', '/root'), ('TERM_PROGRAM_VERSION', '1.77.1'), ('VSCODE_IPC_HOOK_CLI', '/run/user/0/vscode-ipc-746c6602-655e-4dae-bc5d-ffe05e9d0a02.sock'), ('ROS_PYTHON_VERSION', '3'), ('VSCODE_GIT_ASKPASS_MAIN', '/root/.vscode-server/bin/b7886d7461186a5eac768481578c1d7ca80e2d21/extensions/git/dist/askpass-main.js'), ('VSCODE_GIT_ASKPASS_NODE', '/root/.vscode-server/bin/b7886d7461186a5eac768481578c1d7ca80e2d21/node'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/0/bus'), ('COLORTERM', 'truecolor'), ('COLCON_PREFIX_PATH', '/home/ros_ws/install'), ('ROS_DISTRO', 'galactic'), ('LOGNAME', 'root'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('TERM', 'xterm-256color'), ('XDG_SESSION_ID', '1987'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/root/.vscode-server/bin/b7886d7461186a5eac768481578c1d7ca80e2d21/bin/remote-cli:/opt/ros/galactic/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('XDG_RUNTIME_DIR', '/run/user/0'), ('LANG', 'en_US.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/0/vscode-git-146590f331.sock'), ('TERM_PROGRAM', 'vscode'), ('AMENT_PREFIX_PATH', '/home/ros_ws/install/params_learning:/home/ros_ws/install/global_interface:/opt/ros/galactic'), ('SHELL', '/bin/bash'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', ''), ('PWD', '/home/ros_ws/build/params_learning'), ('SSH_CONNECTION', '112.41.8.17 3192 45.150.164.214 36019'), ('XDG_DATA_DIRS', '/usr/local/share:/usr/share:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/galactic/lib/python3.8/site-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/ros_ws/install/params_learning:/home/ros_ws/install/global_interface:/opt/ros/galactic')]), 'shell': False}
[0.085490] (global_interface) CommandEnded: {'returncode': 0}
[0.099560] (-) TimerEvent: {}
[0.110043] (params_learning) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target pub\x1b[0m\n'}
[0.125621] (global_interface) JobProgress: {'identifier': 'global_interface', 'progress': 'install'}
[0.153428] (global_interface) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/ros_ws/build/global_interface'], 'cwd': '/home/ros_ws/build/global_interface', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'root'), ('SSH_CLIENT', '112.41.8.17 3192 36019'), ('XDG_SESSION_TYPE', 'tty'), ('GIT_ASKPASS', '/root/.vscode-server/bin/b7886d7461186a5eac768481578c1d7ca80e2d21/extensions/git/dist/askpass.sh'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/galactic/opt/yaml_cpp_vendor/lib:/opt/ros/galactic/opt/rviz_ogre_vendor/lib:/opt/ros/galactic/lib/x86_64-linux-gnu:/opt/ros/galactic/lib'), ('BROWSER', '/root/.vscode-server/bin/b7886d7461186a5eac768481578c1d7ca80e2d21/bin/helpers/browser.sh'), ('MOTD_SHOWN', 'pam'), ('HOME', '/root'), ('TERM_PROGRAM_VERSION', '1.77.1'), ('VSCODE_IPC_HOOK_CLI', '/run/user/0/vscode-ipc-746c6602-655e-4dae-bc5d-ffe05e9d0a02.sock'), ('ROS_PYTHON_VERSION', '3'), ('VSCODE_GIT_ASKPASS_MAIN', '/root/.vscode-server/bin/b7886d7461186a5eac768481578c1d7ca80e2d21/extensions/git/dist/askpass-main.js'), ('VSCODE_GIT_ASKPASS_NODE', '/root/.vscode-server/bin/b7886d7461186a5eac768481578c1d7ca80e2d21/node'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/0/bus'), ('COLORTERM', 'truecolor'), ('COLCON_PREFIX_PATH', '/home/ros_ws/install'), ('ROS_DISTRO', 'galactic'), ('LOGNAME', 'root'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('TERM', 'xterm-256color'), ('XDG_SESSION_ID', '1987'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/root/.vscode-server/bin/b7886d7461186a5eac768481578c1d7ca80e2d21/bin/remote-cli:/opt/ros/galactic/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('XDG_RUNTIME_DIR', '/run/user/0'), ('LANG', 'en_US.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/0/vscode-git-146590f331.sock'), ('TERM_PROGRAM', 'vscode'), ('AMENT_PREFIX_PATH', '/home/ros_ws/install/params_learning:/home/ros_ws/install/global_interface:/opt/ros/galactic'), ('SHELL', '/bin/bash'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', ''), ('PWD', '/home/ros_ws/build/global_interface'), ('SSH_CONNECTION', '112.41.8.17 3192 45.150.164.214 36019'), ('XDG_DATA_DIRS', '/usr/local/share:/usr/share:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/galactic/lib/python3.8/site-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/ros_ws/install/params_learning:/home/ros_ws/install/global_interface:/opt/ros/galactic')]), 'shell': False}
[0.170281] (params_learning) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/pub.dir/src/pub.cpp.o\x1b[0m\n'}
[0.177849] (global_interface) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[0.178006] (global_interface) StdoutLine: {'line': b'-- Up-to-date: /home/ros_ws/install/global_interface/share/ament_index/resource_index/package_run_dependencies/global_interface\n'}
[0.178079] (global_interface) StdoutLine: {'line': b'-- Up-to-date: /home/ros_ws/install/global_interface/share/ament_index/resource_index/parent_prefix_path/global_interface\n'}
[0.178141] (global_interface) StdoutLine: {'line': b'-- Up-to-date: /home/ros_ws/install/global_interface/share/global_interface/environment/ament_prefix_path.sh\n'}
[0.178207] (global_interface) StdoutLine: {'line': b'-- Up-to-date: /home/ros_ws/install/global_interface/share/global_interface/environment/ament_prefix_path.dsv\n'}
[0.178264] (global_interface) StdoutLine: {'line': b'-- Up-to-date: /home/ros_ws/install/global_interface/share/global_interface/environment/path.sh\n'}
[0.178319] (global_interface) StdoutLine: {'line': b'-- Up-to-date: /home/ros_ws/install/global_interface/share/global_interface/environment/path.dsv\n'}
[0.178372] (global_interface) StdoutLine: {'line': b'-- Up-to-date: /home/ros_ws/install/global_interface/share/global_interface/local_setup.bash\n'}
[0.178425] (global_interface) StdoutLine: {'line': b'-- Up-to-date: /home/ros_ws/install/global_interface/share/global_interface/local_setup.sh\n'}
[0.178478] (global_interface) StdoutLine: {'line': b'-- Up-to-date: /home/ros_ws/install/global_interface/share/global_interface/local_setup.zsh\n'}
[0.178530] (global_interface) StdoutLine: {'line': b'-- Up-to-date: /home/ros_ws/install/global_interface/share/global_interface/local_setup.dsv\n'}
[0.178600] (global_interface) StdoutLine: {'line': b'-- Installing: /home/ros_ws/install/global_interface/share/global_interface/package.dsv\n'}
[0.179013] (global_interface) StdoutLine: {'line': b'-- Up-to-date: /home/ros_ws/install/global_interface/share/ament_index/resource_index/packages/global_interface\n'}
[0.179101] (global_interface) StdoutLine: {'line': b'-- Up-to-date: /home/ros_ws/install/global_interface/share/global_interface/cmake/global_interfaceConfig.cmake\n'}
[0.179163] (global_interface) StdoutLine: {'line': b'-- Up-to-date: /home/ros_ws/install/global_interface/share/global_interface/cmake/global_interfaceConfig-version.cmake\n'}
[0.179220] (global_interface) StdoutLine: {'line': b'-- Up-to-date: /home/ros_ws/install/global_interface/share/global_interface/package.xml\n'}
[0.181423] (global_interface) CommandEnded: {'returncode': 0}
[0.199646] (-) TimerEvent: {}
[0.255461] (global_interface) JobEnded: {'identifier': 'global_interface', 'rc': 0}
[0.299773] (-) TimerEvent: {}
[0.400122] (-) TimerEvent: {}
[0.500484] (-) TimerEvent: {}
[0.601410] (-) TimerEvent: {}
[0.701782] (-) TimerEvent: {}
[0.802158] (-) TimerEvent: {}
[0.902510] (-) TimerEvent: {}
[1.002969] (-) TimerEvent: {}
[1.103461] (-) TimerEvent: {}
[1.203814] (-) TimerEvent: {}
[1.308353] (-) TimerEvent: {}
[1.409320] (-) TimerEvent: {}
[1.509652] (-) TimerEvent: {}
[1.610003] (-) TimerEvent: {}
[1.710410] (-) TimerEvent: {}
[1.730152] (params_learning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/pstl/glue_algorithm_defs.h:13\x1b[m\x1b[K,\n'}
[1.731658] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/algorithm:71\x1b[m\x1b[K,\n'}
[1.731780] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executor.hpp:18\x1b[m\x1b[K,\n'}
[1.731866] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[1.731945] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.732020] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[1.732093] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ros_ws/src/params_learning/src/pub.cpp:2\x1b[m\x1b[K:\n'}
[1.732163] (params_learning) StderrLine: {'line': b'/usr/include/c++/9/functional: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_check_arity<void (CustomPublisher::*)(), CustomPublisher*, const std::_Placeholder<1>&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.732237] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:787:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_helper<false, void (CustomPublisher::*)(), CustomPublisher*, const std::_Placeholder<1>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.732940] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:808:5:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (CustomPublisher::*)(); _BoundArgs = {CustomPublisher*, const std::_Placeholder<1>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.733152] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros_ws/src/params_learning/src/pub.cpp:16:81:\x1b[m\x1b[K   required from here\n'}
[1.733252] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:775:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kstatic assertion failed: Wrong number of arguments for pointer-to-member\n'}
[1.733439] (params_learning) StderrLine: {'line': b'  774 |       static_assert(_Varargs::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K\n'}
[1.733601] (params_learning) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K~~~~~\x1b[m\x1b[K\n'}
[1.733696] (params_learning) StderrLine: {'line': b'  775 | \x1b[01;31m\x1b[K      ? sizeof...(_BoundArgs) >= _Arity::value + 1\x1b[m\x1b[K\n'}
[1.733896] (params_learning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.734100] (params_learning) StderrLine: {'line': b'  776 | \x1b[01;31m\x1b[K      : sizeof...(_BoundArgs) == _Arity::value + 1\x1b[m\x1b[K,\n'}
[1.734285] (params_learning) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.810524] (-) TimerEvent: {}
[1.910943] (-) TimerEvent: {}
[2.008970] (params_learning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/client.hpp:40\x1b[m\x1b[K,\n'}
[2.009236] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/callback_group.hpp:23\x1b[m\x1b[K,\n'}
[2.009303] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.009361] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.009417] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.009496] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.009569] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executor.hpp:36\x1b[m\x1b[K,\n'}
[2.009630] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[2.009684] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.009735] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[2.009786] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ros_ws/src/params_learning/src/pub.cpp:2\x1b[m\x1b[K:\n'}
[2.009836] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros_ws/src/params_learning/src/pub.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid CustomPublisher::custom_callback()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.009888] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros_ws/src/params_learning/src/pub.cpp:54:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot convert \xe2\x80\x98\x1b[01m\x1b[Kstd::string\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::__cxx11::basic_string<char>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst char*\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.009942] (params_learning) StderrLine: {'line': b'   54 |   RCLCPP_INFO(this->get_logger(), \x1b[01;31m\x1b[Kthis->msg_text\x1b[m\x1b[K);\n'}
[2.009994] (params_learning) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[2.010053] (params_learning) StderrLine: {'line': b'      |                                         \x1b[01;31m\x1b[K|\x1b[m\x1b[K\n'}
[2.010105] (params_learning) StderrLine: {'line': b'      |                                         \x1b[01;31m\x1b[Kstd::string {aka std::__cxx11::basic_string<char>}\x1b[m\x1b[K\n'}
[2.011003] (-) TimerEvent: {}
[2.020430] (params_learning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rmw/types.h:28\x1b[m\x1b[K,\n'}
[2.020631] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rcl/types.h:20\x1b[m\x1b[K,\n'}
[2.020711] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rcl/log_level.h:22\x1b[m\x1b[K,\n'}
[2.020786] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rcl/arguments.h:21\x1b[m\x1b[K,\n'}
[2.020874] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rcl/context.h:28\x1b[m\x1b[K,\n'}
[2.020946] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rcl/guard_condition.h:26\x1b[m\x1b[K,\n'}
[2.021006] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executor.hpp:30\x1b[m\x1b[K,\n'}
[2.021059] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[2.021112] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.021176] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[2.021229] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ros_ws/src/params_learning/src/pub.cpp:2\x1b[m\x1b[K:\n'}
[2.021282] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rcutils/logging.h:479:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  initializing argument 4 of \xe2\x80\x98\x1b[01m\x1b[Kvoid rcutils_log(const rcutils_log_location_t*, int, const char*, const char*, ...)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.021367] (params_learning) StderrLine: {'line': b'  479 |   \x1b[01;36m\x1b[Kconst char * format\x1b[m\x1b[K,\n'}
[2.021429] (params_learning) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[2.111131] (-) TimerEvent: {}
[2.211481] (-) TimerEvent: {}
[2.312377] (-) TimerEvent: {}
[2.413289] (-) TimerEvent: {}
[2.514995] (-) TimerEvent: {}
[2.552802] (params_learning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/callback_group.hpp:27\x1b[m\x1b[K,\n'}
[2.553032] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.553114] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.553191] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.553262] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.553332] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executor.hpp:36\x1b[m\x1b[K,\n'}
[2.553399] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[2.553466] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.553532] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[2.553595] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ros_ws/src/params_learning/src/pub.cpp:2\x1b[m\x1b[K:\n'}
[2.553670] (params_learning) StderrLine: {'line': b'/opt/ros/galactic/include/rclcpp/timer.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.553754] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:209:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.553854] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:199:3:\x1b[m\x1b[K   required from here\n'}
[2.553938] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:223:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>) ()\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.554028] (params_learning) StderrLine: {'line': b'  223 |     \x1b[01;31m\x1b[Kcallback_\x1b[m\x1b[K();\n'}
[2.554096] (params_learning) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.554237] (params_learning) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/pstl/glue_algorithm_defs.h:13\x1b[m\x1b[K,\n'}
[2.554316] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/algorithm:71\x1b[m\x1b[K,\n'}
[2.554386] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executor.hpp:18\x1b[m\x1b[K,\n'}
[2.554453] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[2.554521] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.554667] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[2.554737] (params_learning) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ros_ws/src/params_learning/src/pub.cpp:2\x1b[m\x1b[K:\n'}
[2.554804] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:480:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) [with _Args = {_Args ...}; _Result = _Result; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.554868] (params_learning) StderrLine: {'line': b'  480 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(_Args&&... __args)\n'}
[2.554923] (params_learning) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.554995] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:480:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.556782] (params_learning) StderrLine: {'line': b'/usr/include/c++/9/functional: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _BoundArg, class _CallArgs> using _Mu_type = decltype (std::_Mu<typename std::remove_cv<_Up>::type>()(declval<_BoundArg&>(), declval<_CallArgs&>())) [with _BoundArg = std::_Placeholder<1>; _CallArgs = std::tuple<>; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.556875] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:443:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(std::_Bind<_Functor(_Bound_args ...)>::_Mu_type<_BArgs, _CallArgs>&& ...)>::type [with _Fn = void (CustomPublisher::*)(); _CallArgs = std::tuple<>; _BArgs = {CustomPublisher*, std::_Placeholder<1>}; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.556943] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:447:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs> using _Res_type = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<_Functor, _CallArgs, _Bound_args ...> [with _CallArgs = std::tuple<>; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.557003] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:478:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.557070] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:209:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.557131] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:199:3:\x1b[m\x1b[K   required from here\n'}
[2.557187] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:439:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(std::_Mu<std::_Placeholder<1>, false, true>) (std::_Placeholder<1>&, std::tuple<>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.557245] (params_learning) StderrLine: {'line': b'  439 |      \x1b[01;31m\x1b[K_Mu<typename remove_cv<_BoundArg>::type>()(\x1b[m\x1b[K\n'}
[2.557299] (params_learning) StderrLine: {'line': b'      |      \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[2.557354] (params_learning) StderrLine: {'line': b'  440 | \x1b[01;31m\x1b[K       std::declval<_BoundArg&>(), std::declval<_CallArgs&>())\x1b[m\x1b[K );\n'}
[2.557408] (params_learning) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.557461] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:345:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tuple> std::_Safe_tuple_element_t<(std::is_placeholder<_Tp>::value - 1), _Tuple>&& std::_Mu<_Arg, false, true>::operator()(const volatile _Arg&, _Tuple&) const volatile [with _Tuple = _Tuple; _Arg = std::_Placeholder<1>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.557520] (params_learning) StderrLine: {'line': b'  345 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(const volatile _Arg&, _Tuple& __tuple) const volatile\n'}
[2.557578] (params_learning) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.557632] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:345:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.560528] (params_learning) StderrLine: {'line': b'/usr/include/c++/9/functional: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int __i, class _Tuple> using _Safe_tuple_element_t = typename std::enable_if<(__i < std::tuple_size<_Tuple>::value), std::tuple_element<__i, _Tuple> >::type::type [with long unsigned int __i = (1 - 1); _Tuple = std::tuple<>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.565324] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:345:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tuple> std::_Safe_tuple_element_t<0, _Tuple>&& std::_Mu<std::_Placeholder<1>, false, true>::operator()<_Tuple>(const volatile std::_Placeholder<1>&, _Tuple&) const volatile [with _Tuple = std::tuple<>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.565402] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:439:48:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _BoundArg, class _CallArgs> using _Mu_type = decltype (std::_Mu<typename std::remove_cv<_Up>::type>()(declval<_BoundArg&>(), declval<_CallArgs&>())) [with _BoundArg = std::_Placeholder<1>; _CallArgs = std::tuple<>; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.565474] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:443:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(std::_Bind<_Functor(_Bound_args ...)>::_Mu_type<_BArgs, _CallArgs>&& ...)>::type [with _Fn = void (CustomPublisher::*)(); _CallArgs = std::tuple<>; _BArgs = {CustomPublisher*, std::_Placeholder<1>}; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.565533] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:447:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs> using _Res_type = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<_Functor, _CallArgs, _Bound_args ...> [with _CallArgs = std::tuple<>; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.565591] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:478:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.565663] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:209:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.565721] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:199:3:\x1b[m\x1b[K   required from here\n'}
[2.565773] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:260:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::tuple_element<0, std::tuple<> > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.565828] (params_learning) StderrLine: {'line': b'  260 |     using \x1b[01;31m\x1b[K_Safe_tuple_element_t\x1b[m\x1b[K\n'}
[2.565882] (params_learning) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.565946] (params_learning) StderrLine: {'line': b'/opt/ros/galactic/include/rclcpp/timer.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.566029] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:209:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.566089] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:199:3:\x1b[m\x1b[K   required from here\n'}
[2.566143] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:491:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) const [with _Args = {_Args ...}; _Result = _Result; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.566198] (params_learning) StderrLine: {'line': b'  491 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(_Args&&... __args) const\n'}
[2.566251] (params_learning) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.566303] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:491:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.566355] (params_learning) StderrLine: {'line': b'/usr/include/c++/9/functional: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _BoundArg, class _CallArgs> using _Mu_type = decltype (std::_Mu<typename std::remove_cv<_Up>::type>()(declval<_BoundArg&>(), declval<_CallArgs&>())) [with _BoundArg = const std::_Placeholder<1>; _CallArgs = std::tuple<>; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.566409] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:443:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(std::_Bind<_Functor(_Bound_args ...)>::_Mu_type<_BArgs, _CallArgs>&& ...)>::type [with _Fn = std::add_const<void (CustomPublisher::*)()>::type; _CallArgs = std::tuple<>; _BArgs = {std::add_const<CustomPublisher*>::type, std::add_const<std::_Placeholder<1> >::type}; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.566471] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:454:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using _Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [with _CallArgs = std::tuple<>; __cv_quals = std::add_const; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.566562] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:489:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.566667] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:209:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.566748] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:199:3:\x1b[m\x1b[K   required from here\n'}
[2.566822] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:439:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(std::_Mu<std::_Placeholder<1>, false, true>) (const std::_Placeholder<1>&, std::tuple<>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.566892] (params_learning) StderrLine: {'line': b'  439 |      \x1b[01;31m\x1b[K_Mu<typename remove_cv<_BoundArg>::type>()(\x1b[m\x1b[K\n'}
[2.566962] (params_learning) StderrLine: {'line': b'      |      \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[2.567029] (params_learning) StderrLine: {'line': b'  440 | \x1b[01;31m\x1b[K       std::declval<_BoundArg&>(), std::declval<_CallArgs&>())\x1b[m\x1b[K );\n'}
[2.567104] (params_learning) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.567184] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:345:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tuple> std::_Safe_tuple_element_t<(std::is_placeholder<_Tp>::value - 1), _Tuple>&& std::_Mu<_Arg, false, true>::operator()(const volatile _Arg&, _Tuple&) const volatile [with _Tuple = _Tuple; _Arg = std::_Placeholder<1>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.567270] (params_learning) StderrLine: {'line': b'  345 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(const volatile _Arg&, _Tuple& __tuple) const volatile\n'}
[2.567360] (params_learning) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.567449] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:345:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.567530] (params_learning) StderrLine: {'line': b'/opt/ros/galactic/include/rclcpp/timer.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.567631] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:209:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.567727] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:199:3:\x1b[m\x1b[K   required from here\n'}
[2.567814] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:509:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) volatile [with _Args = {_Args ...}; _Result = _Result; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.567901] (params_learning) StderrLine: {'line': b'  509 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(_Args&&... __args) volatile\n'}
[2.567978] (params_learning) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.568045] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:509:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.568111] (params_learning) StderrLine: {'line': b'/usr/include/c++/9/functional: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _BoundArg, class _CallArgs> using _Mu_type = decltype (std::_Mu<typename std::remove_cv<_Up>::type>()(declval<_BoundArg&>(), declval<_CallArgs&>())) [with _BoundArg = volatile std::_Placeholder<1>; _CallArgs = std::tuple<>; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.568209] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:443:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(std::_Bind<_Functor(_Bound_args ...)>::_Mu_type<_BArgs, _CallArgs>&& ...)>::type [with _Fn = std::add_volatile<void (CustomPublisher::*)()>::type; _CallArgs = std::tuple<>; _BArgs = {std::add_volatile<CustomPublisher*>::type, std::add_volatile<std::_Placeholder<1> >::type}; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.572415] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:454:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using _Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [with _CallArgs = std::tuple<>; __cv_quals = std::add_volatile; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.572522] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:506:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.572589] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:209:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.572656] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:199:3:\x1b[m\x1b[K   required from here\n'}
[2.572714] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:439:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(std::_Mu<std::_Placeholder<1>, false, true>) (volatile std::_Placeholder<1>&, std::tuple<>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.572774] (params_learning) StderrLine: {'line': b'  439 |      \x1b[01;31m\x1b[K_Mu<typename remove_cv<_BoundArg>::type>()(\x1b[m\x1b[K\n'}
[2.572831] (params_learning) StderrLine: {'line': b'      |      \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[2.572887] (params_learning) StderrLine: {'line': b'  440 | \x1b[01;31m\x1b[K       std::declval<_BoundArg&>(), std::declval<_CallArgs&>())\x1b[m\x1b[K );\n'}
[2.572944] (params_learning) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.573011] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:345:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tuple> std::_Safe_tuple_element_t<(std::is_placeholder<_Tp>::value - 1), _Tuple>&& std::_Mu<_Arg, false, true>::operator()(const volatile _Arg&, _Tuple&) const volatile [with _Tuple = _Tuple; _Arg = std::_Placeholder<1>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.573077] (params_learning) StderrLine: {'line': b'  345 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(const volatile _Arg&, _Tuple& __tuple) const volatile\n'}
[2.573134] (params_learning) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.573188] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:345:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.573244] (params_learning) StderrLine: {'line': b'/opt/ros/galactic/include/rclcpp/timer.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.573315] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:209:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.573374] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:199:3:\x1b[m\x1b[K   required from here\n'}
[2.573429] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:521:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) const volatile [with _Args = {_Args ...}; _Result = _Result; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.573485] (params_learning) StderrLine: {'line': b'  521 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(_Args&&... __args) const volatile\n'}
[2.573540] (params_learning) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.573594] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:521:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.573648] (params_learning) StderrLine: {'line': b'/usr/include/c++/9/functional: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _BoundArg, class _CallArgs> using _Mu_type = decltype (std::_Mu<typename std::remove_cv<_Up>::type>()(declval<_BoundArg&>(), declval<_CallArgs&>())) [with _BoundArg = const volatile std::_Placeholder<1>; _CallArgs = std::tuple<>; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.573720] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:443:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(std::_Bind<_Functor(_Bound_args ...)>::_Mu_type<_BArgs, _CallArgs>&& ...)>::type [with _Fn = std::add_cv<void (CustomPublisher::*)()>::type; _CallArgs = std::tuple<>; _BArgs = {std::add_cv<CustomPublisher*>::type, std::add_cv<std::_Placeholder<1> >::type}; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.573783] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:454:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using _Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [with _CallArgs = std::tuple<>; __cv_quals = std::add_cv; _Functor = void (CustomPublisher::*)(); _Bound_args = {CustomPublisher*, std::_Placeholder<1>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.573847] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:518:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.573913] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:209:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (CustomPublisher::*(CustomPublisher*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.573972] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/timer.hpp:199:3:\x1b[m\x1b[K   required from here\n'}
[2.574041] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:439:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(std::_Mu<std::_Placeholder<1>, false, true>) (const volatile std::_Placeholder<1>&, std::tuple<>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.574098] (params_learning) StderrLine: {'line': b'  439 |      \x1b[01;31m\x1b[K_Mu<typename remove_cv<_BoundArg>::type>()(\x1b[m\x1b[K\n'}
[2.574152] (params_learning) StderrLine: {'line': b'      |      \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[2.574204] (params_learning) StderrLine: {'line': b'  440 | \x1b[01;31m\x1b[K       std::declval<_BoundArg&>(), std::declval<_CallArgs&>())\x1b[m\x1b[K );\n'}
[2.574257] (params_learning) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.574310] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:345:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tuple> std::_Safe_tuple_element_t<(std::is_placeholder<_Tp>::value - 1), _Tuple>&& std::_Mu<_Arg, false, true>::operator()(const volatile _Arg&, _Tuple&) const volatile [with _Tuple = _Tuple; _Arg = std::_Placeholder<1>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.574363] (params_learning) StderrLine: {'line': b'  345 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(const volatile _Arg&, _Tuple& __tuple) const volatile\n'}
[2.574417] (params_learning) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.574469] (params_learning) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:345:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.615126] (-) TimerEvent: {}
[2.715467] (-) TimerEvent: {}
[2.815844] (-) TimerEvent: {}
[2.860110] (params_learning) StderrLine: {'line': b'make[2]: *** [CMakeFiles/pub.dir/build.make:63: CMakeFiles/pub.dir/src/pub.cpp.o] Error 1\n'}
[2.863455] (params_learning) StderrLine: {'line': b'make[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/pub.dir/all] Error 2\n'}
[2.864532] (params_learning) StderrLine: {'line': b'make: *** [Makefile:141: all] Error 2\n'}
[2.912694] (params_learning) CommandEnded: {'returncode': 2}
[2.916468] (-) TimerEvent: {}
[2.993059] (params_learning) JobEnded: {'identifier': 'params_learning', 'rc': 2}
[3.004596] (-) EventReactorShutdown: {}
